--------------------------------------------------------------------------------
+++ ESP8266 ESP-12E NodeMcu HTTP Get notes

+ Version I bought:
++ ESP8266 ESP-12E NodeMcu Lua V3 CH340G WIFI Lua Wireless Development Board Module

In the IDE, I set the Tools/Board setting to following. Both worked.
++ First: Generic ESP8266Module.
++ Then I used: ESP8266 ESP-12E.

+ Video I used to get it configured:
https://www.youtube.com/watch?v=p06NNRq5NTU
++ I added ESP8266 boards as an option in the IDE.
++ I uploaded and ran the basic blink program.

+ I didn't need to install any libraries. The HTTP Get program worked fine.

In my router, the device shows up named: ESP_375742

+ Can try, when errors. Didn't work for me.
++ In Arduino IDE Tools >> Erase Flash >> All flash content

+ When changing a setting:
++ Build options changed, rebuilding all

+ Power options:
http://henrysbench.capnfatz.com/henrys-bench/arduino-projects-tips-and-more/powering-the-esp-12e-nodemcu-development-board/

--------------------------------------------------------------------------------
+++ Webserver programs

+ Hello webserver program.
https://github.com/esp8266/Arduino/blob/master/libraries/ESP8266WebServer/examples/HelloServer/HelloServer.ino

https://techtutorialsx.com/2017/03/26/esp8266-webserver-accessing-the-body-of-a-http-request/

--------------------------------------------------------------------------------
+ Another HTTP GET program:
https://circuits4you.com/2018/03/10/esp8266-http-get-request-example/

/*
 * HTTP Client GET Request
 * Copyright (c) 2018, circuits4you.com
 * All rights reserved.
 * https://circuits4you.com 
 * Connects to WiFi HotSpot. */

#include <ESP8266WiFi.h>
#include <WiFiClient.h> 
#include <ESP8266WebServer.h>
#include <ESP8266HTTPClient.h>

/* Set these to your desired credentials. */
const char *ssid = "circuits4you.com";  //ENTER YOUR WIFI SETTINGS
const char *password = "yourPassword";

//Web/Server address to read/write from 
const char *host = "192.168.43.128";   //https://circuits4you.com website or IP address of server

//=======================================================================
//                    Power on setup
//=======================================================================

void setup() {
  delay(1000);
  Serial.begin(115200);
  WiFi.mode(WIFI_OFF);        //Prevents reconnection issue (taking too long to connect)
  delay(1000);
  WiFi.mode(WIFI_STA);        //This line hides the viewing of ESP as wifi hotspot
  
  WiFi.begin(ssid, password);     //Connect to your WiFi router
  Serial.println("");

  Serial.print("Connecting");
  // Wait for connection
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  //If connection successful show IP address in serial monitor
  Serial.println("");
  Serial.print("Connected to ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());  //IP address assigned to your ESP
}

//=======================================================================
//                    Main Program Loop
//=======================================================================
void loop() {
  HTTPClient http;    //Declare object of class HTTPClient

  String ADCData, station, getData, Link;
  int adcvalue=analogRead(A0);  //Read Analog value of LDR
  ADCData = String(adcvalue);   //String to interger conversion
  station = "B";

  //GET Data
  getData = "?status=" + ADCData + "&station=" + station ;  //Note "?" added at front
  Link = "http://192.168.43.128/c4yforum/getdemo.php" + getData;
  
  http.begin(Link);     //Specify request destination
  
  int httpCode = http.GET();            //Send the request
  String payload = http.getString();    //Get the response payload

  Serial.println(httpCode);   //Print HTTP return code
  Serial.println(payload);    //Print request response payload

  http.end();  //Close connection
  
  delay(5000);  //GET Data at every 5 seconds
}
//=======================================================================

--------------------------------------------------------------------------------
+++ Webserver program
https://techtutorialsx.com/2017/03/26/esp8266-webserver-accessing-the-body-of-a-http-request/

#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
 
ESP8266WebServer server(80);
 
const char* ssid = "YourNetworkName";
const char* password =  "YourNetworkPassword";
 
void setup() {
 
    Serial.begin(115200);
    WiFi.begin(ssid, password);  //Connect to the WiFi network
 
    while (WiFi.status() != WL_CONNECTED) {  //Wait for connection
 
        delay(500);
        Serial.println("Waiting to connect...");
 
    }
 
    Serial.print("IP address: ");
    Serial.println(WiFi.localIP());  //Print the local IP
 
    server.on("/body", handleBody); //Associate the handler function to the path
 
    server.begin(); //Start the server
    Serial.println("Server listening");
 
}
 
void loop() {
 
    server.handleClient(); //Handling of incoming requests
 
}
 
void handleBody() { //Handler for the body path
 
      if (server.hasArg("plain")== false){ //Check if body received
 
            server.send(200, "text/plain", "Body not received");
            return;
 
      }
 
      String message = "Body received:\n";
             message += server.arg("plain");
             message += "\n";
 
      server.send(200, "text/plain", message);
      Serial.println(message);
}

--------------------------------------------------------------------------------

Output from running:

+ Connecting to the WiFi network: BATCAVE
.....
++ WiFi connected on IP address: 192.168.1.79
-------------------------------------------------------
+ Connecting to: 192.168.1.73
++ Connected. Make request to the URL: /hello.txt
-----------------
Response:
HTTP/1.1 200 OK
X-Powered-By: Express
Accept-Ranges: bytes
Cache-Control: public, max-age=0
Last-Modified: Wed, 29 May 2019 01:36:03 GMT
ETag: W/"24-16b013adbb8"
Content-Type: text/plain; charset=UTF-8
Content-Length: 36
Date: Sat, 22 Jun 2019 01:17:24 GMT
Connection: close

File: hello.txt
Hello there.

cheers
-----------------
+ Closing connection
-------------------------------------------------------
+ Connecting to: 192.168.1.73
++ Connected. Make request to the URL: /hello.txt
-----------------
Response:
HTTP/1.1 200 OK
X-Powered-By: Express
Accept-Ranges: bytes
Cache-Control: public, max-age=0
Last-Modified: Wed, 29 May 2019 01:36:03 GMT
ETag: W/"24-16b013adbb8"
Content-Type: text/plain; charset=UTF-8
Content-Length: 36
Date: Sat, 22 Jun 2019 01:17:39 GMT
Connection: close

File: hello.txt
Hello there.

cheers
-----------------
+ Closing connection


--------------------------------------------------------------------------------

Sketch uses 258916 bytes (51%) of program storage space. Maximum is 499696 bytes.
Global variables use 26788 bytes (32%) of dynamic memory, leaving 55132 bytes for local variables. Maximum is 81920 bytes.
esptool.py v2.6
2.6
esptool.py v2.6
Serial port /dev/cu.wchusbserial14120
Connecting....
Chip is ESP8266EX
Features: WiFi
MAC: 3c:71:bf:37:57:42
Uploading stub...
Running stub...
Stub running...
Configuring flash size...
Auto-detected Flash size: 4MB
Flash params set to 0x0340
Compressed 263072 bytes to 192125...

Writing at 0x00000000... (8 %)
Writing at 0x00004000... (16 %)
Writing at 0x00008000... (25 %)
Writing at 0x0000c000... (33 %)
Writing at 0x00010000... (41 %)
Writing at 0x00014000... (50 %)
Writing at 0x00018000... (58 %)
Writing at 0x0001c000... (66 %)
Writing at 0x00020000... (75 %)
Writing at 0x00024000... (83 %)

--------------------------------------------------------------------------------

