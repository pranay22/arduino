// -----------------------------------------------------------------------------
/*
  Shifting to Expand I/O.

  Using a 74HC595 Shift Register for serial to multiple pin inputs.
  Uses 4 pins on the microcontroller.

  8 buttons, one side all connected to Nano digital interupt pin (2 or 3), with a 10K pull down resister.
  The other side of the buttons, each go to a sift register output.
  Shift out 255, to turn them all high.
  When a button is pressed, the interupt is triggered.
  Then scan the buttons by shifting 1 high bit through each, to find out which button was pressed.
    Shift out B10000000. If high on the Nano pin, then this button was pressed.
    Shift out B01000000. If high on the Nano pin, then this button was pressed.
    Shift out B00100000. If high on the Nano pin, then this button was pressed.
    Shift out B00010000. If high on the Nano pin, then this button was pressed.
    Shift out B00001000. If high on the Nano pin, then this button was pressed.
    Shift out B00000100. If high on the Nano pin, then this button was pressed.
    Shift out B00000100. If high on the Nano pin, then this button was pressed.
    Shift out B00000010. If high on the Nano pin, then this button was pressed.
    Shift out B00000001. If high on the Nano pin, then this button was pressed.
  Scan all to find out if more than 1 button was pressed.
  To handle multiple key presses, add a diode to stop shorts.
  
  + Using 74HC595 for inputs:
  https://forum.arduino.cc/index.php?topic=163813.0
  https://www.youtube.com/watch?v=nXl4fb_LbcI
  https://www.youtube.com/watch?v=1Vb2BpxPnjU
  
  + Using 74HC165 for inputs:
  https://www.youtube.com/watch?v=hR6qOhUeKMc
  https://www.theengineeringprojects.com/2018/11/arduino-74hc165-interfacing-increase-input-pins.html
*/
// -----------------------------------------------------------------------------
// Shift Register

#include <SPI.h>
byte Input, Output, Check = 1;
int j;

void pin_read() {
  for (j = 0; j < 50; j++) {
    // 50 mili-second debounce delay. Also, always the capture of multiple buttons pushed.
    // Delay without using delay(), since this is in an interupt and delay() using interupts.
    delayMicroseconds(1000);
  }
  Check = 1;
  for (j = 0; j < 8; j++) {
    // Check which buttons have been pressed.
    SPI.transfer(Check);
    SPI.transfer(Output);
    digitalWrite(4, HIGH);
    digitalWrite(4, LOW);
    // Time for pins to go high.
    delayMicroseconds(500);
    //
    // Shift through. This should be rewritten.
    if (digitalRead(2) == HIGH)
      bitWrite(Output, j, 1);
    else
      bitWrite(Output, j, 0);
    //
    Check = Check << 1;
  }
  SPI.transfer(255);
  SPI.transfer(Output);
  digitalWrite(4, HIGH);
  digitalWrite(4, LOW);
}

// -----------------------------------------------------------------------------
void setup() {
  Serial.begin(115200);
  delay(1000);        // Give the serial connection time to start before the first print.
  Serial.println(""); // Newline after garbage characters.
  Serial.println("+++ Setup.");

  pinMode(13, OUTPUT);    // Nano SPI clock pin, used in the SPI library.
  pinMode(11, OUTPUT);    // Nano SPI data pin, used in the SPI library.
  pinMode(4, OUTPUT);     // latch
  pinMode(2, INPUT);      // Interupt input pin connected to one side of all the buttons.
  //
  SPI.setBitOrder(MSBFIRST);
  SPI.setDataMode(SPI_MODE0);
  SPI.setClockDivider(SPI_CLOCK_DIV2);  // Runs at 8mhz. Nano runs at 16mhz.
  SPI.begin();
  //
  // 2 shift register output commands.
  // The second register sets the buttons all to high.
  SPI.transfer(255);
  SPI.transfer(0);
  //
  digitalWrite(4, HIGH);  // Latch the shift values.
  digitalWrite(4, LOW);
  
  attachInterrupt(0, pin_read, RISING); // Nano digital pin 2.
  Serial.println("+ Ready for input.");

  Serial.println("+++ Start program loop.");
}

// -----------------------------------------------------------------------------
// Device Loop.

void loop() {
  Serial.println("+ Looping");
  delay(1000);
}
// -----------------------------------------------------------------------------
