                                ; ----------------------------------------------
                                ; Programing challenge:
                                ; + Done: Compile using my assembler.
                                ; + Get components to run.
                                ; + Get the complete program to run.
                                ;
                                ; ----------------------------------------------
LF	EQU	0AH
CR	EQU	0DH

	ORG	0000H
                                ; ...
        ORG	0050H
                                ; ...
                                ; ----------------------------------------------
MSGDYW:	
        DB	CR,LF
  	DB	'DO YOU WANT TO GO ON A SPACE VOYAGE? '
  	DB	0
MSGCHK:	
        DB	CR,LF
  	DB	'CHICKEN!'
  	DB	0
                                ; ----------------------------------------------
;	ORG	0500H

                                ; ----------------------------------------------
MSG:
	MOV	A,M		;Fetch character
	ANA	A		;End of message?
	RZ			;Yes, return
 	CALL	PRINT		;No, print character
 	INX	H		;Increment message pointer
	JMP	MSG		;Continue printout
RN:
	LXI	H,0040H		;Set random number pointer
	MOV	A,M		;The random number
	MOV	B,A		;Is generated by performing
	RLC			;The series of arithmetic
	XRA	B		;Operations presented
	RRC
	INR	L
	INR	M
	ADD	M
	DCR	L
	MOV	M,A		;Save random number
	RET                     ; 
                                ; ----------------------------------------------
                                ;
                                ; ...
                                ; ----------------------------------------------
                                ;
GALAXY:
	LXI	SP,STACK	;Set stack pointer
	; CALL	CONINI		;Initialize Console I/O
	LXI	H,MSGDYW
	CALL	MSG		;Print introduction
START:
	CALL	RN		;Increment random number
	CALL	INPCK		;Input yet?
	JP	START		;No, continue wait
	CALL	INPUT		;Input character
	CPI	'N'		;No, stop game?
	JZ	OVER		;Yes, vanish from galaxy
	MVI	E,00C0H		;Set pointer to galaxy storage
                                ; ----------------------------------------------
        jmp START
                                ; ----------------------------------------------
                                ; ...
OVER:
	LXI	H,MSGCHK	;Print "CHICKEN"
	CALL	MSG
	HLT			;Halt

                                ; ----------------------------------------------
;	ORG	0F80H

; Test status of input device for character
; Sets sign flag if character coming in
INPCK:
	CALL	IOST		;CF
	ANI	0FFH		;Non-zero?
	JZ	INPCK1
	ORI	0FFH		;Set sign flag
INPCK1:
	RET


; Input a character from the system
; Return character in register 'A'
INPUT:
	CALL	IOIN
	RET

; Output a character to the system
; Character to output is contained in 'A'
PRINT:
	PUSH	B		;Save BC
	ANI	7FH		;String parity bit
	CALL	IOOUT
	POP	B		;Restore BC
	RET

	DS	32		;Stack Area
STACK:	EQU	$

;******************************************************
; 88-2SIO CHANNEL A SERIAL INTERFACE FUNCTIONS        *
;******************************************************

SIOCTL	EQU	10H		;88-2SIO CONTROL PORT
SIODAT	EQU	11H		;88-2SIO DATA PORT
SIOTXR	EQU	02H		;XMIT READY MASK
SIORDR	EQU	01H		;RCV READY MASK

;******************************************************
; IOINI - RESET AND INITIALIZE 2SIO PORT A            *
;******************************************************
IOINI:	MVI	A,3		;RESET ACIA
	OUT	SIOCTL
	MVI	A,015H		;RTS ON, 8N1
	OUT	SIOCTL
	RET

;******************************************************
; IOST - TEST SERIAL PORT A FOR A CHARACTER. RETURN   *
; WITH A=0 AND Z SET IF NO CHARACTER AVAILABLE.       *
;******************************************************
IOST:	IN	SIOCTL		;WAIT FOR A CHARACTER
	ANI	SIORDR		;SET Z, CLEAR A IF NO CHR		
	RET

;******************************************************
; IOIN - RETURN A CHARACTER FROM THE SERIAL PORT IN A.*
; MSB IS CLEARED.                                     *
; Z IS CLEARED UNLESS RECEIVED CHR IS A NULL.         *
;******************************************************
IOIN:	CALL	IOST		;WAIT FOR A CHARACTER
	JZ	IOIN

	IN	SIODAT		;A = RECEIVED CHARACTER
	ANI	07FH		;STRIP PARITY, CLEAR Z UNLESS NULL
	JMP	IOOUT		;ECHO CHARACTER

;******************************************************
; IOOUT - SEND THE CHARACTER IN A OUT THE SERIAL PORT.*
; CLOBBERS C.                                         *
;******************************************************
IOOUT:	MOV	C,A
WLOOP:
        IN	SIOCTL		;WAIT UNTIL OK TO XMIT
	ANI	SIOTXR
	JZ	WLOOP

	MOV	A,C		
	OUT	SIODAT		;SEND THE CHARACTER

	RET


CONINI:
        CALL    IOINI
	RET

	END
                                    ; --------------------------------------
                                    ; Assembler needs updates.
+ Parse |MSGCHK: DB CR,LF|
++ parseLine componets theRest|DB CR,LF|
++ parseLine componets part1asIs|MSGCHK:| part1|msgchk:| part2|DB| theDirective|db| theRest|CR,LF|
++ parseLine, DB directive, theLabel|MSGCHK| theValue|CR,LF| programTop=119

- Error, immediate label not found: CR,LF.
                                    ; 
                                    ; --------------------------------------